@using MyProject.Domain
@using MyProject.Domain.DbQuery
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<EmployeeQuery>

@{
    ViewData["Title"] = "Search Employee";
}

<div class="container mt-4">
    <h1 class="text-center">@ViewData["Title"]</h1>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <!-- Add New Button -->
        <a asp-action="Create" class="btn btn-success">Add New</a>

        <!-- Search Form in a Flex Container -->
        <form class="form-inline d-flex align-items-center" method="get" asp-action="SearchEmployee">
            <div class="form-group mx-2 mb-0">
                <input type="text" class="form-control" name="searchName" placeholder="Name" />
            </div>
            <div class="form-group mx-2 mb-0">
                <input type="text" class="form-control" name="searchDepartment" placeholder="Department" />
            </div>
            <div class="form-group mx-2 mb-0">
                <input type="text" class="form-control" name="searchPosition" placeholder="Position" />
            </div>
            <div class="form-group mx-2 mb-0">
                <input type="number" class="form-control" name="reviewScore" placeholder="Review Score" />
            </div>
            <div class="form-group mx-2 mb-0">
                <input type="number" class="form-control" name="pageSize" placeholder="Page" />
            </div>
            <div class="form-group mx-2 mb-0">
                <input type="number" class="form-control" name="PageNumber" placeholder="Item" />
            </div>
            <button type="submit" class="btn btn-primary mx-2 mb-0">Apply</button>
        </form>
    </div>

    <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
        <table class="table table-striped table-bordered table-hover">
            <thead class="table-dark">
                <tr>
                    <th>SL.</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Phone Number</th>
                    <th>Designation</th>
                    <th>Department</th>
                    <th>Average Score</th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int index = (Model.PageNumber - 1) * Model.PageSize + 1;
                }
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@index</td>
                        <td>@item.Name</td>
                        <td>@item.Email</td>
                        <td>@item.PhoneNumber</td>
                        <td>@item.Position</td>
                        <td>@item.DepartmentName</td>
                        <td>@item.ReviewScore</td>
                        <td class="text-center">
                            <div class="d-flex justify-content-center gap-2">
                                <a class="btn btn-sm btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                <a class="btn btn-sm btn-success" asp-action="Details" asp-route-id="@item.Id">Details</a>
                                <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.Id"
                                   onclick="return confirm('Are you sure you want to delete this employee?');">Delete</a>
                            </div>
                        </td>
                    </tr>
                    index++;
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("SearchEmployee", new { page }))
    </div>
</div>

<style>
    .table-responsive {
        position: relative;
    }

    .table thead {
        position: sticky;
        top: 0;
        z-index: 1020;
        background-color: #343a40;
        color: #fff;
    }
</style>
